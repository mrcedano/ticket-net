/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import AdministradorVistas.IndexUsuarios;
import ClienteVistas.Cartelera;
import ClienteVistas.Historial;
import DTOs.UserDto;
import Enums.UserTypes;
import JObjects.SideBarBuilder;
import Modelo.UserModel;
import Utils.Global;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Window;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Arrays;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

/**
 *
 * @author cedsc
 */
public class MiCuenta extends javax.swing.JFrame {

    private final UserDto user;
    private final UserModel userModel;

    public MiCuenta(UserDto user) throws Exception {
        initComponents();

        setTitle("TicketNet | Mi Cuenta");
        setLocationRelativeTo(null);

        userModel = new UserModel();

        this.user = user;

        SideBarBuilder sidebarBuilder = new SideBarBuilder();

        if (Global.user.getType() == UserTypes.ADMINISTRADOR) {
            sidebarBuilder
                    .addOption("Panel", () -> {
                        try {
                            new AdministradorVistas.Panel().setVisible(true);
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }

                        setVisible(false);
                    })
                    .addOption("Mi Cuenta", () -> {
                    })
                    .addOption("Usuarios", () -> {
                        try {
                            new IndexUsuarios().setVisible(true);
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }

                        setVisible(false);
                    })
                    .addOption("Cerrar Sesión", () -> {
                        Global.destroySession();

                        new InicioSesion().setVisible(true);
                        setVisible(false);
                    });
        } else if (Global.user.getType() == UserTypes.CLIENTE) {
            sidebarBuilder
                    .addOption("Cartelera", () -> {
                        try {
                            new Cartelera().setVisible(true);

                            setVisible(false);
                        } catch (Exception ex) {
                        }
                    })
                    .addOption("Ver Historial", () -> {
                        try {
                            new Historial().setVisible(true);
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }

                        setVisible(false);
                    })
                    .addOption("Mi Cuenta", () -> {
                    })
                    .addOption("Cerrar Sesión", () -> {
                        Global.destroySession();

                        new InicioSesion().setVisible(true);

                        setVisible(false);
                    });
        } else if (Global.user.getType() == UserTypes.CAJERO) {
            sidebarBuilder
                    .addOption("Panel", () -> {
                        try {
                            new CajeroVistas.Panel().setVisible(true);

                            setVisible(false);
                        } catch (Exception ex) {
                        }
                    })
                    .addOption("Mi Cuenta", () -> {
                    })
                    .addOption("Cerrar Sesión", () -> {
                        Global.destroySession();

                        new InicioSesion().setVisible(true);

                        setVisible(false);
                    });
        }

        JPanel sidebar = sidebarBuilder.build(0, 0, 167, 700);

        getContentPane().add(sidebar);

        loadInformationFromUser();
    }

    private void loadInformationFromUser() {
        user_jtxtfld.setText(user.getUsername());
        email_jtxtfld.setText(user.getCorreo());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        user_jtxtfld = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        email_jtxtfld = new javax.swing.JTextField();
        reset_password_jbtn = new javax.swing.JButton();
        delete_account_jbtn = new javax.swing.JButton();
        reset_email = new javax.swing.JButton();
        reset_username = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Mi cuenta");

        user_jtxtfld.setEditable(false);
        user_jtxtfld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_jtxtfldActionPerformed(evt);
            }
        });

        jLabel2.setText("Usuario:");

        jLabel3.setText("Correo:");

        email_jtxtfld.setEditable(false);
        email_jtxtfld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                email_jtxtfldActionPerformed(evt);
            }
        });

        reset_password_jbtn.setText("Reestablecer contraseña");
        reset_password_jbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_password_jbtnActionPerformed(evt);
            }
        });

        delete_account_jbtn.setText("Borrar cuenta");
        delete_account_jbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_account_jbtnActionPerformed(evt);
            }
        });

        reset_email.setText("Restablecer correo");
        reset_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_emailActionPerformed(evt);
            }
        });

        reset_username.setText("Restablecer usuario");
        reset_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_usernameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(187, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(user_jtxtfld)
                                .addComponent(email_jtxtfld, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(delete_account_jbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reset_password_jbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reset_email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reset_username, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user_jtxtfld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(email_jtxtfld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(reset_username)
                .addGap(7, 7, 7)
                .addComponent(reset_email)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reset_password_jbtn)
                .addGap(24, 24, 24)
                .addComponent(delete_account_jbtn)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void email_jtxtfldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_email_jtxtfldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_email_jtxtfldActionPerformed

    private void reset_password_jbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_password_jbtnActionPerformed
        dialogToUpdatePassword();
    }//GEN-LAST:event_reset_password_jbtnActionPerformed

    private void delete_account_jbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_account_jbtnActionPerformed
        dialogToDeleteAccount();
    }//GEN-LAST:event_delete_account_jbtnActionPerformed

    private void user_jtxtfldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_jtxtfldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_jtxtfldActionPerformed

    private void reset_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_usernameActionPerformed
        dialogToUpdateUser();
    }//GEN-LAST:event_reset_usernameActionPerformed

    private void reset_emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_emailActionPerformed
        // TODO add your handling code here:
        dialogToUpdateEmail();
    }//GEN-LAST:event_reset_emailActionPerformed

    private void dialogToUpdateUser() {
        JPanel panel = new JPanel(new GridBagLayout());
        panel.setBorder(BorderFactory.createEmptyBorder(10, 12, 10, 12));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(4, 4, 4, 4);
        gbc.anchor = GridBagConstraints.LINE_START;
        gbc.fill = GridBagConstraints.HORIZONTAL;

        JLabel lblUsuario = new JLabel("Nuevo Usuario:");
        JTextField txtUsuario = new JTextField(18);

        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0;
        panel.add(lblUsuario, gbc);

        gbc.gridx = 1;
        gbc.weightx = 1;
        panel.add(txtUsuario, gbc);

        JLabel lblConfirmar = new JLabel("Confirmar contraseña:");
        JPasswordField pwdConfirmar = new JPasswordField(18);

        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 0;
        panel.add(lblConfirmar, gbc);

        gbc.gridx = 1;
        gbc.weightx = 1;
        panel.add(pwdConfirmar, gbc);

        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weightx = 0;
        Component gap = Box.createRigidArea(new Dimension(0, 10));
        panel.add(gap, gbc);

        JButton btnConfirmar = new JButton("Confirmar");
        JButton btnCancelar = new JButton("Cancelar");

        JPanel buttonsPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 10, 0));
        buttonsPanel.add(btnConfirmar);
        buttonsPanel.add(btnCancelar);

        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.weightx = 1;
        panel.add(buttonsPanel, gbc);

        btnConfirmar.addActionListener(e -> {
            String usuario = txtUsuario.getText();
            String password = new String(pwdConfirmar.getPassword());

            if (user.getPassword().equals(password)) {

                user.setUsername(usuario);

                try {
                    userModel.updateUser(user);

                    user_jtxtfld.setText(user.getUsername());

                    Window w = SwingUtilities.getWindowAncestor(panel);

                    w.dispose();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

            } else {
                JOptionPane.showMessageDialog(this, "Verificación Incorrecta!", "Mensaje", JOptionPane.WARNING_MESSAGE);

                Window w = SwingUtilities.getWindowAncestor(panel);

                w.dispose();
            }
        });

        btnCancelar.addActionListener(e -> {
            Window w = SwingUtilities.getWindowAncestor(panel);

            w.dispose();
        });

        JOptionPane.showConfirmDialog(
                null,
                panel,
                "Confirmación",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE
        );
    }

    private void dialogToUpdateEmail() {
        JPanel panel = new JPanel(new GridBagLayout());
        panel.setBorder(BorderFactory.createEmptyBorder(10, 12, 10, 12));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(4, 4, 4, 4);
        gbc.anchor = GridBagConstraints.LINE_START;
        gbc.fill = GridBagConstraints.HORIZONTAL;

        JLabel lblUsuario = new JLabel("Nuevo Correo:");
        JTextField txtUsuario = new JTextField(18);

        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0;
        panel.add(lblUsuario, gbc);

        gbc.gridx = 1;
        gbc.weightx = 1;
        panel.add(txtUsuario, gbc);

        JLabel lblConfirmar = new JLabel("Confirmar contraseña:");
        JPasswordField pwdConfirmar = new JPasswordField(18);

        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 0;
        panel.add(lblConfirmar, gbc);

        gbc.gridx = 1;
        gbc.weightx = 1;
        panel.add(pwdConfirmar, gbc);

        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weightx = 0;
        Component gap = Box.createRigidArea(new Dimension(0, 10));
        panel.add(gap, gbc);

        JButton btnConfirmar = new JButton("Confirmar");
        JButton btnCancelar = new JButton("Cancelar");

        JPanel buttonsPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 10, 0));
        buttonsPanel.add(btnConfirmar);
        buttonsPanel.add(btnCancelar);

        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.weightx = 1;
        panel.add(buttonsPanel, gbc);

        // Action listeners
        btnConfirmar.addActionListener(e -> {
            String correo = txtUsuario.getText();
            String password = new String(pwdConfirmar.getPassword());

            if (user.getPassword().equals(password)) {

                user.setCorreo(correo);

                try {
                    userModel.updateUser(user);
                    email_jtxtfld.setText(user.getCorreo());
                    Window w = SwingUtilities.getWindowAncestor(panel);

                    w.dispose();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

            } else {
                JOptionPane.showMessageDialog(this, "Verificación Incorrecta!", "Mensaje", JOptionPane.WARNING_MESSAGE);

                Window w = SwingUtilities.getWindowAncestor(panel);

                w.dispose();
            }
        });

        btnCancelar.addActionListener(e -> {
            Window w = SwingUtilities.getWindowAncestor(panel);

            w.dispose();
        });

        JOptionPane.showConfirmDialog(
                null,
                panel,
                "Confirmación",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE
        );
    }

    private void dialogToUpdatePassword() {
        JPanel panel = new JPanel(new GridBagLayout());
        panel.setBorder(BorderFactory.createEmptyBorder(10, 12, 10, 12));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(4, 4, 4, 4);
        gbc.anchor = GridBagConstraints.LINE_START;
        gbc.fill = GridBagConstraints.HORIZONTAL;

        JLabel lblUsuario = new JLabel("Contraseña nueva:");
        JPasswordField txtUsuario = new JPasswordField(18);

        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0;
        panel.add(lblUsuario, gbc);

        gbc.gridx = 1;
        gbc.weightx = 1;
        panel.add(txtUsuario, gbc);

        JLabel lblConfirmar = new JLabel("Contraseña anterior:");
        JPasswordField pwdConfirmar = new JPasswordField(18);

        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 0;
        panel.add(lblConfirmar, gbc);

        gbc.gridx = 1;
        gbc.weightx = 1;
        panel.add(pwdConfirmar, gbc);

        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weightx = 0;
        Component gap = Box.createRigidArea(new Dimension(0, 10));
        panel.add(gap, gbc);

        JButton btnConfirmar = new JButton("Confirmar");
        JButton btnCancelar = new JButton("Cancelar");

        JPanel buttonsPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 10, 0));
        buttonsPanel.add(btnConfirmar);
        buttonsPanel.add(btnCancelar);

        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.weightx = 1;
        panel.add(buttonsPanel, gbc);

        btnConfirmar.addActionListener(e -> {
            String newPassword = new String(txtUsuario.getPassword());
            String password = new String(pwdConfirmar.getPassword());

            if (user.getPassword().equals(password)) {

                user.setPassword(newPassword);

                try {
                    userModel.updateUser(user);

                    Window w = SwingUtilities.getWindowAncestor(panel);

                    w.dispose();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

            } else {
                JOptionPane.showMessageDialog(this, "Verificación Incorrecta!", "Mensaje", JOptionPane.WARNING_MESSAGE);

                Window w = SwingUtilities.getWindowAncestor(panel);

                w.dispose();
            }
        });

        btnCancelar.addActionListener(e -> {
            Window w = SwingUtilities.getWindowAncestor(panel);

            w.dispose();
        });

        JOptionPane.showConfirmDialog(
                null,
                panel,
                "Confirmación",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE
        );
    }

    private void dialogToDeleteAccount() {
        JPanel panel = new JPanel(new GridBagLayout());
        panel.setBorder(BorderFactory.createEmptyBorder(10, 14, 10, 14));
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(4, 4, 4, 4);
        gbc.anchor = GridBagConstraints.LINE_START;
        gbc.fill = GridBagConstraints.HORIZONTAL;

        JLabel lblWarning = new JLabel("¿Estás seguro en eliminar tu cuenta? Esto es irrevercible");
        lblWarning.setForeground(new Color(180, 0, 0));
        lblWarning.setFont(lblWarning.getFont().deriveFont(Font.BOLD));

        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.weightx = 1;
        panel.add(lblWarning, gbc);

        JLabel lblPass = new JLabel("Confirmar contraseña:");
        JPasswordField pwdConfirm = new JPasswordField(18);

        gbc.gridwidth = 1;
        gbc.gridy = 1;
        gbc.gridx = 0;
        gbc.weightx = 0;
        panel.add(lblPass, gbc);

        gbc.gridx = 1;
        gbc.weightx = 1;
        panel.add(pwdConfirm, gbc);

        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weightx = 0;
        Component gap = Box.createRigidArea(new Dimension(0, 10));
        panel.add(gap, gbc);

        JButton btnConfirmar = new JButton("Confirmar");
        JButton btnCancelar = new JButton("Cancelar");

        JPanel buttonsPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 10, 0));
        buttonsPanel.add(btnConfirmar);
        buttonsPanel.add(btnCancelar);

        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.weightx = 1;
        panel.add(buttonsPanel, gbc);

        btnConfirmar.addActionListener(e -> {
            String pass = new String(pwdConfirm.getPassword());

            Window w = SwingUtilities.getWindowAncestor(panel);

            if (user.getPassword().equals(pass)) {
                try {
                    userModel.desactivateUser(Global.user);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

                Global.destroySession();
            } else {
                JOptionPane.showMessageDialog(this, "Verificación Incorrecta!", "Mensaje", JOptionPane.WARNING_MESSAGE);
            }

            w.dispose();

            setVisible(false);

            new InicioSesion().setVisible(true);
        });

        btnCancelar.addActionListener(e -> {
            Window w = SwingUtilities.getWindowAncestor(panel);
            if (w != null) {
                w.dispose();
            }
        });

        JOptionPane.showConfirmDialog(
                null,
                panel,
                "Eliminar cuenta",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE
        );

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete_account_jbtn;
    private javax.swing.JTextField email_jtxtfld;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton reset_email;
    private javax.swing.JButton reset_password_jbtn;
    private javax.swing.JButton reset_username;
    private javax.swing.JTextField user_jtxtfld;
    // End of variables declaration//GEN-END:variables
}
